generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model usuario {
  id              Int              @id @default(autoincrement())
  uuid            String           @db.Char(36)
  token_api       String?
  senha           String
  email           String           @unique
  complemento     String?
  tema            String?
  cpf             String?          @unique
  situacao        Boolean          @default(true)
  created_at      DateTime         @default(now())
  deleted_at      DateTime?
  updated_at      DateTime?        @updatedAt
  data_nascimento DateTime?
  nome            String
  funcao          String?
  usuario_foto    String?
  tipo_pessoa     type_person      @default(EMPLOYEE)
  dia_trabalhado  dia_trabalhado[]
  vendas          venda[]
  metas           meta[]           @relation("UsuarioMetas")
  observacao      observacao[]
}

model dia_trabalhado {
  id              Int      @id @default(autoincrement())
  user_id         Int
  data            DateTime
  horario_entrada DateTime
  horario_saida   DateTime
  observacao      String?
  is_present      Boolean
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
  usuario         usuario  @relation(fields: [user_id], references: [id])

  @@index([user_id, data])
}

model venda {
  id             Int             @id @default(autoincrement())
  funcionario_id Int
  data_venda     DateTime        @default(now())
  pontos_totais  Float
  situacao       Boolean
  loja_id        Int?
  funcionario    usuario         @relation(fields: [funcionario_id], references: [id])
  loja           loja?           @relation(fields: [loja_id], references: [id])
  venda_detalhe  venda_detalhe[]

  @@unique([funcionario_id, data_venda])
}

model venda_detalhe {
  id         Int     @id @default(autoincrement())
  venda_id   Int
  produto_id Int
  quantidade Int
  pontos     Int
  produto    produto @relation(fields: [produto_id], references: [id])
  venda      venda   @relation(fields: [venda_id], references: [id])

  @@index([venda_id, produto_id])
}

model produto {
  id              Int             @id @default(autoincrement())
  codigo          String          @unique
  nome            String
  descricao       String?
  id_marca        Int?
  preco           Float?
  pontos          Int?
  situacao        Boolean
  imagem          String?
  id_tipo_sistema Int?
  linha_produto   linha_produto[]
  marca           marca?          @relation(fields: [id_marca], references: [id])
  venda_detalhe   venda_detalhe[]
  categorias      categoria[]     @relation("categoria_to_produto")
  linhas          linha[]         @relation("linha_produto")
}

model categoria {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  produtos produto[] @relation("categoria_to_produto")
}

model marca {
  id       Int       @id @default(autoincrement())
  nome     String    @unique
  cor      String
  metas    meta[]
  linhas   linha[]
  produtos produto[]
}

model meta {
  id              Int           @id @default(autoincrement())
  nome            String
  descricao       String?
  usuario_id      Int
  data_inicio     DateTime      @default(now())
  data_fim        DateTime      @default(now()) // ← Adicionado default
  objetivo_total  Int           @default(0)     // ← Adicionado default
  usuarios        usuario[]     @relation("UsuarioMetas")
  meta_etapas     meta_etapa[]
  marca           marca         @relation(fields: [marcaId], references: [id])
  marcaId         Int
  situacao        Int           @default(0)     // ← Adicionado default

  @@unique([usuario_id, data_inicio])
}

model meta_etapa {
  id        Int     @id @default(autoincrement())
  meta_id   Int
  nome      String  @default("Etapa")           // ← Adicionado default
  objetivo  Int     @default(0)                 // ← Adicionado default
  atingida  Boolean @default(false)
  meta      meta    @relation(fields: [meta_id], references: [id])

  @@index([meta_id])
}


model mail {
  id             Int       @id @default(autoincrement())
  assunto        String?   @db.VarChar(445)
  corpo          String?
  email          String?   @db.VarChar(245)
  data_cadastro  DateTime?
  data_envio     DateTime?
  situacao_envio Int?
  origem         String?   @db.VarChar(100)
}

model linha {
  id            Int             @id @default(autoincrement())
  nome          String          @unique
  marcaId       Int
  marca         marca           @relation(fields: [marcaId], references: [id])
  linha_produto linha_produto[]
  produtos      produto[]       @relation("linha_produto")

  @@index([nome])
}

model linha_produto {
  id         Int     @id @default(autoincrement())
  id_linha   Int
  id_produto Int
  linha      linha   @relation(fields: [id_linha], references: [id])
  produto    produto @relation(fields: [id_produto], references: [id])

  @@unique([id_linha, id_produto])
}

model loja {
  id            Int     @id @default(autoincrement())
  nome_fantasia String
  razao_social  String
  vendas        venda[]
}

model observacao {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  data        DateTime?

  usuario_id Int
  usuario    usuario @relation(fields: [usuario_id], references: [id])
}

enum type_person {
  USER
  ADMIN
  EMPLOYEE
  MANAGER
  GUEST
}
